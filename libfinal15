local HUDLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/BCarmine52/Libtest/refs/heads/main/libfinal9"))()

-- Criar a HUD com o t√≠tulo "Zeke Hub"
local hud = HUDLibrary.new("Zeke Hub")

-- Vari√°veis para armazenar as informa√ß√µes
local player = game.Players.LocalPlayer -- Pega o jogador local
local startTime = os.time() -- Armazena o tempo de in√≠cio
local money = 0
local eggs = 0
local potions = 0
local greenBalls = 0
local purpleBalls = 0

-- Adicionar o nome do jogador
hud:addLabel("playerName", player.Name) -- Nome do jogador

-- Adicionar grupo horizontal com dinheiro, ovos e po√ß√µes
hud:addHorizontalGroup("row1", {
    { name = "money", text = "üí∞ 00", order = 1 },
    { name = "eggs", text = "ü•ö 00", order = 2 },
    { name = "potions", text = "üß™ 00", order = 3 }
})

-- Adicionar grupo horizontal com bolas verdes e roxas
hud:addHorizontalGroup("row2", {
    { name = "greenBalls", text = "üü¢ 00", order = 1 },
    { name = "purpleBalls", text = "üü£ 00", order = 2 }
})

-- Adicionar o tempo de execu√ß√£o
hud:addLabel("executionTime", "‚è∞ 00:00:00") -- Rel√≥gio inicial

-- Centralizar HUD apenas no Android
if game:GetService("UserInputService"):GetPlatform() == Enum.Platform.Android then
    hud.container.AnchorPoint = Vector2.new(0.5, 0.5) -- Define o ponto de ancoragem no centro
    hud.container.Position = UDim2.new(0.5, 0, 0.5, 0) -- Centraliza no meio da tela
end

-- Fun√ß√£o para ajustar o formato do dinheiro
local function formatMoney(value)
    local emoji = "üí∞"
    local formattedValue = tostring(value)
    return emoji .. " " .. formattedValue
end

-- Fun√ß√£o para calcular o espa√ßamento com base no n√∫mero de d√≠gitos
local function adjustMoneySpacing(value)
    local digitCount = #tostring(value)
    if digitCount == 1 then
        return UDim2.new(0.30, 0, 0.15, 0) -- Posi√ß√£o inicial
    elseif digitCount == 2 then
        return UDim2.new(0.27, 0, 0.15, 0) -- Ajuste menor
    elseif digitCount == 3 then
        return UDim2.new(0.24, 0, 0.15, 0) -- Ajuste para 3 d√≠gitos
    elseif digitCount == 4 then
        return UDim2.new(0.12, 0, 0.15, 0) -- Ajuste maior para 4 d√≠gitos
    elseif digitCount >= 5 then
        return UDim2.new(0.05, 0, 0.15, 0) -- Ajuste maior para 5 ou mais d√≠gitos
    end
end

-- Fun√ß√£o para formatar o tempo no formato HH:MM:SS
local function formatTime(elapsed)
    local hours = math.floor(elapsed / 3600)
    local minutes = math.floor((elapsed % 3600) / 60)
    local seconds = elapsed % 60
    return string.format("‚è∞ %02d:%02d:%02d", hours, minutes, seconds)
end

-- Fun√ß√£o para simular ganhos
local function simulateGains()
    money = money + math.random(500, 1000) -- Incremento din√¢mico de 500 a 1000
    if math.random(1, 5) == 1 then
        eggs = eggs + 100
    end
    if math.random(1, 8) == 1 then
        potions = potions + 1
    end
    if math.random(1, 6) == 1 then
        greenBalls = greenBalls + 1
    end
    if math.random(1, 10) == 1 then
        purpleBalls = purpleBalls + 1
    end
end

-- Atualizar as informa√ß√µes dinamicamente
spawn(function()
    while true do
        wait(1) -- Atualizar a cada segundo

        -- Simular ganhos
        simulateGains()

        -- Calcular tempo de execu√ß√£o
        local elapsedTime = os.time() - startTime

        -- Atualizar os valores na HUD
        hud:updateLabel("money", formatMoney(money)) -- Atualiza o dinheiro
        hud:updateLabel("eggs", "ü•ö " .. string.format("%02d", eggs))
        hud:updateLabel("potions", "üß™ " .. string.format("%02d", potions))
        hud:updateLabel("greenBalls", "üü¢ " .. string.format("%02d", greenBalls))
        hud:updateLabel("purpleBalls", "üü£ " .. string.format("%02d", purpleBalls))
        hud:updateLabel("executionTime", formatTime(elapsedTime)) -- Atualizar o rel√≥gio

        -- Ajustar o espa√ßamento do dinheiro com base nos d√≠gitos
        local moneyLabel = hud:getLabel("money") -- Obt√©m a label do dinheiro
        if moneyLabel then
            moneyLabel.Position = adjustMoneySpacing(money) -- Ajusta a posi√ß√£o de acordo com os d√≠gitos
        end
    end
end)
